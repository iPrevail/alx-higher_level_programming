Dividing a matrix by a common diviser
======================================
import matrix_divided
----------------------
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>>
Division by zero
-----------------
>>> matrix_divided([[6, 12], [5, 22]], 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero
>>>
Divide a matrix with equal row lengths
--------------------------------------
>>> matrix_divided([[1,2,3],[4,5,6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>>
Use an empty matrix item
-------------------------
>>> matrix_divided([[None],[5]], 4)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>>
Use matrix with varying size rows
---------------------------------
>>> matrix_divided([[1,2,3], [4,5]], 5)
Traceback (most recent call last):
TypeError: each row of the matrix must have the same size
>>>
Use a matrix with a string in one of the sublists
--------------------------------------------------
>>> matrix_divided([[1, '2', 2], [2, 3, 4]], 2)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>>
Use matrix of negative and positive ints and floats
---------------------------------------------------
>>> matrix_divided([[1, 2, -3], [1.5, 2.5, -3.5]], -0.5)
[[-2.0, -4.0, 6.0], [-3.0, -5.0, 7.0]]
>>>
