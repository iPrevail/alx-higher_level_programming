The test for the add function
=============================
We first import the add function and inf
---------------------------------
>>> add_integer = __import__('0-add_integer').add_integer
>>> from math import inf
>>>
When a and b are strings
------------------------
>>> add_integer("me", "you")
Traceback (most recent call last):
TypeError: a must be an integer
>>>
When only b is a string
------------------------
>>> add_integer(5, "15")
Traceback (most recent call last):
TypeError: b must be an integer
>>>
When both are floats
---------------------
>>> add_integer(2.4, 3.6)
5
>>>
When b is the only float
------------------------
>>> add_integer(3, 4.8)
7
>>>
when b is negative
-------------------
>>> add_integer(5, -2)
3
>>>
when a is negative
-------------------
>>> add_integer(-5, 2)
-3
>>>
When a is none
----------------
>>> add_integer(None)
Traceback (most recent call last): 
TypeError: a must be an integer
>>>
When a is infinite 
-------------------
>>> add_integer(float(inf))
Traceback (most recent call last):
OverflowError: cannot convert float infinity to integer
>>>
Missing two arguments
----------------------
>>> add_integer()
Traceback (most recent call last):
TypeError: add_integer() missing 1 required positional argument: 'a'
>>>
Missing one argument
---------------------
>>> add_integer(5)
103
>>>
When passed in indeterminant form
----------------------------------
>>> add_integer(float('NaN'))
Traceback (most recent call last):
ValueError: cannot convert float NaN to integer
>>>

